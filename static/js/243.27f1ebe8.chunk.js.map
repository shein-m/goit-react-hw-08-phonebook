{"version":3,"file":"static/js/243.27f1ebe8.chunk.js","mappings":"6OAEaA,EAAoBC,EAAAA,QAAAA,KAAH,sBAEjBC,EAAgBD,EAAAA,QAAAA,IAAH,mGAObE,EAAkBF,EAAAA,QAAAA,MAAH,iFAMfG,EAAmBH,EAAAA,QAAAA,OAAH,+C,uCCNhBI,EAAa,WACxB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACMC,GAAQC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKH,KAAf,KAE/BI,EAAAA,EAAAA,YAAU,WACRX,EAASY,EAAAA,EAAAA,QAAAA,cACV,GAAE,CAACZ,IAEJ,IAAMa,EAAe,SAAAC,GACnB,IAAMC,EAAQD,EAAME,OAAOD,MAE3B,OAAQD,EAAME,OAAOC,MACnB,IAAK,QACHb,EAASW,GACT,MACF,IAAK,WACHT,EAAYS,GACZ,MACF,QACE,OAEL,EAaD,OACE,UAACrB,EAAD,CAAmBwB,SAPA,SAAAJ,GACnBA,EAAMK,iBACNnB,GAASoB,EAAAA,EAAAA,IAAM,CAAEjB,MAAAA,EAAOE,SAAAA,KANxBD,EAAS,IACTE,EAAY,GAOb,EAG4Ce,aAAa,OAAxD,WACE,UAACzB,EAAD,YACE,SAACC,EAAD,CAAiByB,QAAQ,cAAzB,oBACA,kBACEC,GAAG,cACHC,KAAK,QACLP,KAAK,QACLQ,UAAQ,EACRV,MAAOZ,EACPuB,SAAUb,QAGd,UAACjB,EAAD,YACE,SAACC,EAAD,CAAiByB,QAAQ,iBAAzB,uBACA,kBACEC,GAAG,iBACHC,KAAK,WACLP,KAAK,WACLQ,UAAQ,EACRV,MAAOV,EACPqB,SAAUb,QAGd,SAACf,EAAD,CAAkB0B,KAAK,SAAvB,sBACA,iBAAMG,MAAO,CAAEC,MAAO,OAAtB,SACa,MAAVrB,GAAiB,uBAIzB,ECvED,EAJc,WACZ,OAAO,SAACR,EAAD,GACR,C","sources":["components/SignInForm/signInForm.styled.js","components/SignInForm/SignInForm.jsx","pages/LoginPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const SignInFormWrapper = styled.form``;\n\nexport const SignInFormDiv = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 5px;\n  margin-bottom: 15px;\n`;\n\nexport const SignInFormLabel = styled.label`\n  width: 100%;\n  font-size: 18px;\n  font-weight: 600;\n`;\n\nexport const SignInFormButton = styled.button`\n  margin-right: 10px;\n`;\n","import { useEffect, useState } from 'react';\nimport {\n  SignInFormButton,\n  SignInFormDiv,\n  SignInFormLabel,\n  SignInFormWrapper,\n} from './signInForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { login } from 'redux/auth/auth-operations';\nimport { authSlice } from 'redux/auth/auth-slice';\n\nexport const SignInForm = () => {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const error = useSelector(state => state.auth.error);\n\n  useEffect(() => {\n    dispatch(authSlice.actions.removeError());\n  }, [dispatch]);\n\n  const handleChange = event => {\n    const value = event.target.value;\n\n    switch (event.target.name) {\n      case 'email':\n        setEmail(value);\n        break;\n      case 'password':\n        setPassword(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const resetForm = () => {\n    setEmail('');\n    setPassword('');\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    dispatch(login({ email, password }));\n    resetForm();\n  };\n\n  return (\n    <SignInFormWrapper onSubmit={handleSubmit} autoComplete=\"true\">\n      <SignInFormDiv>\n        <SignInFormLabel htmlFor=\"singInEmail\">Email</SignInFormLabel>\n        <input\n          id=\"singInEmail\"\n          type=\"email\"\n          name=\"email\"\n          required\n          value={email}\n          onChange={handleChange}\n        />\n      </SignInFormDiv>\n      <SignInFormDiv>\n        <SignInFormLabel htmlFor=\"signInPassword\">Password</SignInFormLabel>\n        <input\n          id=\"signInPassword\"\n          type=\"password\"\n          name=\"password\"\n          required\n          value={password}\n          onChange={handleChange}\n        />\n      </SignInFormDiv>\n      <SignInFormButton type=\"submit\">Sign In</SignInFormButton>\n      <span style={{ color: 'red' }}>\n        {error === 400 && 'Error, try again'}\n      </span>\n    </SignInFormWrapper>\n  );\n};\n","import { SignInForm } from 'components/SignInForm/SignInForm';\n\nconst Login = () => {\n  return <SignInForm />;\n};\n\nexport default Login;\n"],"names":["SignInFormWrapper","styled","SignInFormDiv","SignInFormLabel","SignInFormButton","SignInForm","dispatch","useDispatch","useState","email","setEmail","password","setPassword","error","useSelector","state","auth","useEffect","authSlice","handleChange","event","value","target","name","onSubmit","preventDefault","login","autoComplete","htmlFor","id","type","required","onChange","style","color"],"sourceRoot":""}