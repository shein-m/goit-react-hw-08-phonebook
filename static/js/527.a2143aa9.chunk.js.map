{"version":3,"file":"static/js/527.a2143aa9.chunk.js","mappings":"wUAEMA,EAAU,iGAKHC,EAAkBC,EAAAA,QAAAA,KAAH,sBAEfC,EAAgBD,EAAAA,QAAAA,MAAH,qLAWbE,EAAcF,EAAAA,QAAAA,IAAH,sKAWXG,EAAsBH,EAAAA,QAAAA,KAAH,2HAM1BF,GAIOM,EAAgBJ,EAAAA,QAAAA,MAAH,sVAYtBF,GAWSO,EAAiBL,EAAAA,QAAAA,OAAH,icAcvBF,E,6LC/DSQ,EAAa,WACxB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAQC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKH,KAAf,KAE/BI,EAAAA,EAAAA,YAAU,WACRN,EAASO,EAAAA,EAAAA,QAAAA,cACV,GAAE,CAACP,IAEJ,IAAMQ,EAAe,SAAAC,GACnB,IAAMC,EAAQD,EAAME,OAAOD,MAE3B,OAAQD,EAAME,OAAOjB,MACnB,IAAK,OACHC,EAAQe,GACR,MAEF,IAAK,QACHb,EAASa,GACT,MAEF,IAAK,WACHX,EAAYW,GACZ,MAEF,QACE,OAEL,EAQKE,EAAY,mCAAG,WAAMH,GAAN,wEACnBA,EAAMI,iBADa,kBAGXb,GAASc,EAAAA,EAAAA,IAAS,CAAEpB,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KAAaiB,SAHnC,OALnBpB,EAAQ,IACRE,EAAS,IACTE,EAAY,IAGO,gDAMjBF,EAAS,IACTE,EAAY,IAPK,yDAAH,sDAWlB,OACE,UAAC,KAAD,CAAiBiB,SAAUJ,EAAcK,aAAa,OAAtD,WACE,SAAC,KAAD,CAAeC,QAAQ,aAAvB,mBACA,UAAC,KAAD,YACE,SAAC,KAAD,CACEC,GAAG,aACHC,KAAK,OACL1B,KAAK,OACLgB,MAAOhB,EACP2B,SAAUb,EACVc,UAAQ,KAEV,SAAC,KAAD,WACE,SAAC,MAAD,CAAWC,KAAM,WAIrB,SAAC,KAAD,CAAeL,QAAQ,cAAvB,oBACA,UAAC,KAAD,YACE,SAAC,KAAD,CACEC,GAAG,cACHC,KAAK,QACL1B,KAAK,QACLgB,MAAOd,EACPyB,SAAUb,EACVc,UAAQ,KAEV,SAAC,KAAD,WACE,SAAC,MAAD,CAAeC,KAAM,WAIzB,SAAC,KAAD,CAAeL,QAAQ,iBAAvB,uBACA,UAAC,KAAD,YACE,SAAC,KAAD,CACEC,GAAG,iBACHC,KAAK,WACL1B,KAAK,WACLgB,MAAOZ,EACPuB,SAAUb,EACVc,UAAQ,KAEV,SAAC,KAAD,WACE,SAAC,MAAD,CAAcC,KAAM,WAIxB,SAAC,KAAD,CAAgBH,KAAK,SAArB,sBACA,iBAAMI,MAAO,CAAEC,MAAO,OAAtB,SACa,MAAVvB,GAAiB,wCAIzB,EC1GD,EATiB,WACf,OACE,4BACE,0CACA,SAACV,EAAD,MAGL,C","sources":["components/AuthForms/AuthForm.styled.js","components/AuthForms/SignUpForm.jsx","pages/ResigisterPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nconst transition = `\n  transition-duration: 250ms;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n`;\n\nexport const AuthFormWrapper = styled.form``;\n\nexport const AuthFormLabel = styled.label`\n  display: block;\n  margin-bottom: 5px;\n\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 1.33;\n  letter-spacing: 0.48px;\n`;\n\nexport const AuthFormDiv = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  margin-bottom: 15px;\n\n  &.last-wrapper {\n    margin-bottom: 20px;\n  }\n`;\n\nexport const AuthFormIconWrapper = styled.span`\n  position: absolute;\n  left: 15px;\n\n  & > svg {\n    transition-property: color;\n    ${transition}\n  }\n`;\n\nexport const AuthFormInput = styled.input`\n  width: 360px;\n  height: 40px;\n  padding-left: 40px;\n\n  border-radius: 4px;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  outline: none;\n\n  font-size: 16px;\n\n  transition-property: border-color;\n  ${transition}\n\n  &:focus {\n    border: 1px solid #4d5ae5;\n  }\n\n  &:focus + span > svg {\n    color: #4d5ae5;\n  }\n`;\n\nexport const AuthFormButton = styled.button`\n  display: block;\n  width: 360px;\n  height: 40px;\n  margin-bottom: 20px;\n  border: none;\n  color: #fff;\n  cursor: pointer;\n\n  border-radius: 4px;\n  background: var(--IRIS, #4d5ae5);\n  box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.15);\n\n  transition-property: opacity;\n  ${transition}\n\n  &:focus {\n    outline: none;\n    background-color: #404bbf;\n  }\n\n  &:disabled {\n    opacity: 0.8;\n    cursor: not-allowed;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport {\n  AuthFormButton,\n  AuthFormDiv,\n  AuthFormLabel,\n  AuthFormWrapper,\n  AuthFormInput,\n  AuthFormIconWrapper,\n} from './AuthForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { register } from 'redux/auth/auth-operations';\nimport { authSlice } from 'redux/auth/auth-slice';\nimport { HiOutlineMail, HiOutlineKey } from 'react-icons/hi';\nimport { CgProfile } from 'react-icons/cg';\n\nexport const SignUpForm = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n  const error = useSelector(state => state.auth.error);\n\n  useEffect(() => {\n    dispatch(authSlice.actions.removeError());\n  }, [dispatch]);\n\n  const handleChange = event => {\n    const value = event.target.value;\n\n    switch (event.target.name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'email':\n        setEmail(value);\n        break;\n\n      case 'password':\n        setPassword(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const resetForm = () => {\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      await dispatch(register({ name, email, password })).unwrap();\n      resetForm();\n    } catch (err) {\n      setEmail('');\n      setPassword('');\n    }\n  };\n\n  return (\n    <AuthFormWrapper onSubmit={handleSubmit} autoComplete=\"true\">\n      <AuthFormLabel htmlFor=\"signUpName\">Name</AuthFormLabel>\n      <AuthFormDiv>\n        <AuthFormInput\n          id=\"signUpName\"\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          required\n        />\n        <AuthFormIconWrapper>\n          <CgProfile size={16} />\n        </AuthFormIconWrapper>\n      </AuthFormDiv>\n\n      <AuthFormLabel htmlFor=\"signUpEmail\">Email</AuthFormLabel>\n      <AuthFormDiv>\n        <AuthFormInput\n          id=\"signUpEmail\"\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          onChange={handleChange}\n          required\n        />\n        <AuthFormIconWrapper>\n          <HiOutlineMail size={16} />\n        </AuthFormIconWrapper>\n      </AuthFormDiv>\n\n      <AuthFormLabel htmlFor=\"signUpPassword\">Password</AuthFormLabel>\n      <AuthFormDiv>\n        <AuthFormInput\n          id=\"signUpPassword\"\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={handleChange}\n          required\n        />\n        <AuthFormIconWrapper>\n          <HiOutlineKey size={16} />\n        </AuthFormIconWrapper>\n      </AuthFormDiv>\n\n      <AuthFormButton type=\"submit\">Sign Up</AuthFormButton>\n      <span style={{ color: 'red' }}>\n        {error === 400 && 'Email is invalid or already taken'}\n      </span>\n    </AuthFormWrapper>\n  );\n};\n","import { SignUpForm } from 'components/AuthForms/SignUpForm';\n\nconst Register = () => {\n  return (\n    <div>\n      <h2>Registration</h2>\n      <SignUpForm />\n    </div>\n  );\n};\n\nexport default Register;\n"],"names":["transition","AuthFormWrapper","styled","AuthFormLabel","AuthFormDiv","AuthFormIconWrapper","AuthFormInput","AuthFormButton","SignUpForm","useState","name","setName","email","setEmail","password","setPassword","dispatch","useDispatch","error","useSelector","state","auth","useEffect","authSlice","handleChange","event","value","target","handleSubmit","preventDefault","register","unwrap","onSubmit","autoComplete","htmlFor","id","type","onChange","required","size","style","color"],"sourceRoot":""}