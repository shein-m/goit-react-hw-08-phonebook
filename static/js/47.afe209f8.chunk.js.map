{"version":3,"file":"static/js/47.afe209f8.chunk.js","mappings":"uUAEMA,EAAU,iGAKHC,EAAkBC,EAAAA,QAAAA,KAAH,sBAEfC,EAAgBD,EAAAA,QAAAA,MAAH,qLAWbE,EAAcF,EAAAA,QAAAA,IAAH,sKAWXG,EAAsBH,EAAAA,QAAAA,KAAH,2HAM1BF,GAIOM,EAAgBJ,EAAAA,QAAAA,MAAH,uUAWtBF,GAWSO,EAAiBL,EAAAA,QAAAA,OAAH,gcAcvBF,E,uLC/DSQ,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACMC,GAAQC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKH,KAAf,KAE/BI,EAAAA,EAAAA,YAAU,WACRX,EAASY,EAAAA,EAAAA,QAAAA,cACV,GAAE,CAACZ,IAEJ,IAAMa,EAAe,SAAAC,GACnB,IAAMC,EAAQD,EAAME,OAAOD,MAE3B,OAAQD,EAAME,OAAOC,MACnB,IAAK,QACHb,EAASW,GACT,MACF,IAAK,WACHT,EAAYS,GACZ,MACF,QACE,OAEL,EAOKG,EAAY,mCAAG,WAAMJ,GAAN,wEACnBA,EAAMK,iBADa,kBAIXnB,GAASoB,EAAAA,EAAAA,IAAM,CAAEjB,MAAAA,EAAOE,SAAAA,KAAagB,SAJ1B,OAJnBjB,EAAS,IACTE,EAAY,IAGO,gDAOjB,MACEA,EAAY,IARG,yDAAH,sDAalB,OACE,UAAC,KAAD,CAAiBgB,SAAUJ,EAAcK,aAAa,OAAtD,WACE,SAAC,KAAD,CAAeC,QAAQ,cAAvB,oBACA,UAAC,KAAD,YACE,SAAC,KAAD,CACEC,GAAG,cACHC,KAAK,QACLT,KAAK,QACLU,YAAY,QACZC,UAAQ,EACRb,MAAOZ,EACP0B,SAAUhB,KAEZ,SAAC,KAAD,WACE,SAAC,MAAD,CAAeiB,KAAM,WAGzB,SAAC,KAAD,CAAeN,QAAQ,iBAAvB,uBACA,UAAC,KAAD,CAAaO,UAAU,eAAvB,WACE,SAAC,KAAD,CACEN,GAAG,iBACHC,KAAK,WACLT,KAAK,WACLU,YAAY,WACZC,UAAQ,EACRb,MAAOV,EACPwB,SAAUhB,KAEZ,SAAC,KAAD,WACE,SAAC,MAAD,CAAciB,KAAM,WAGxB,SAAC,KAAD,CAAgBJ,KAAK,SAASM,SAAuB,KAAb3B,GAAmBE,EAA3D,sBAGA,iBAAM0B,MAAO,CAAEC,MAAO,OAAtB,SACa,MAAV3B,GAAiB,sCAIzB,E,6BC/FY4B,EAAoB1C,EAAAA,QAAAA,IAAH,gEAKjB2C,EAAsB3C,EAAAA,QAAAA,GAAH,+CCQhC,EAXc,WACZ,OACE,SAAC4C,EAAA,EAAD,WACE,UAACF,EAAD,YACE,SAACC,EAAD,qBACA,SAACrC,EAAD,QAIP,C","sources":["components/AuthForms/AuthForm.styled.js","components/AuthForms/LoginForm.jsx","pages/LoginPage/loginPage.styled.js","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nconst transition = `\n  transition-duration: 250ms;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n`;\n\nexport const AuthFormWrapper = styled.form``;\n\nexport const AuthFormLabel = styled.label`\n  display: block;\n  margin-bottom: 5px;\n\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 1.33;\n  letter-spacing: 0.48px;\n`;\n\nexport const AuthFormDiv = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  margin-bottom: 15px;\n\n  &.last-wrapper {\n    margin-bottom: 20px;\n  }\n`;\n\nexport const AuthFormIconWrapper = styled.span`\n  position: absolute;\n  left: 15px;\n\n  & > svg {\n    transition-property: color;\n    ${transition}\n  }\n`;\n\nexport const AuthFormInput = styled.input`\n  min-width: 100%;\n  height: 40px;\n  padding-left: 40px;\n\n  border-radius: 4px;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n\n  font-size: 16px;\n\n  transition-property: border-color;\n  ${transition}\n\n  &:focus {\n    border: 1px solid #4d5ae5;\n  }\n\n  &:focus + span > svg {\n    color: #4d5ae5;\n  }\n`;\n\nexport const AuthFormButton = styled.button`\n  display: block;\n  width: 100%;\n  height: 40px;\n  margin-bottom: 20px;\n  border: none;\n  color: #fff;\n  cursor: pointer;\n\n  border-radius: 4px;\n  background: var(--IRIS, #4d5ae5);\n  box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.15);\n\n  transition-property: opacity;\n  ${transition}\n\n  &:focus {\n    outline: none;\n    background-color: #404bbf;\n  }\n\n  &:disabled {\n    opacity: 0.8;\n    cursor: not-allowed;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport {\n  AuthFormButton,\n  AuthFormDiv,\n  AuthFormLabel,\n  AuthFormWrapper,\n  AuthFormInput,\n  AuthFormIconWrapper,\n} from './AuthForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { login } from 'redux/auth/auth-operations';\nimport { authSlice } from 'redux/auth/auth-slice';\nimport { HiOutlineMail, HiOutlineKey } from 'react-icons/hi';\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const error = useSelector(state => state.auth.error);\n\n  useEffect(() => {\n    dispatch(authSlice.actions.removeError());\n  }, [dispatch]);\n\n  const handleChange = event => {\n    const value = event.target.value;\n\n    switch (event.target.name) {\n      case 'email':\n        setEmail(value);\n        break;\n      case 'password':\n        setPassword(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const resetForm = () => {\n    setEmail('');\n    setPassword('');\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    try {\n      await dispatch(login({ email, password })).unwrap();\n      resetForm();\n    } catch (err) {\n      if (err) {\n        setPassword('');\n      }\n    }\n  };\n\n  return (\n    <AuthFormWrapper onSubmit={handleSubmit} autoComplete=\"true\">\n      <AuthFormLabel htmlFor=\"singInEmail\">Email</AuthFormLabel>\n      <AuthFormDiv>\n        <AuthFormInput\n          id=\"singInEmail\"\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"Email\"\n          required\n          value={email}\n          onChange={handleChange}\n        />\n        <AuthFormIconWrapper>\n          <HiOutlineMail size={16} />\n        </AuthFormIconWrapper>\n      </AuthFormDiv>\n      <AuthFormLabel htmlFor=\"signInPassword\">Password</AuthFormLabel>\n      <AuthFormDiv className=\"last-wrapper\">\n        <AuthFormInput\n          id=\"signInPassword\"\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          onChange={handleChange}\n        />\n        <AuthFormIconWrapper>\n          <HiOutlineKey size={16} />\n        </AuthFormIconWrapper>\n      </AuthFormDiv>\n      <AuthFormButton type=\"submit\" disabled={password === '' && error}>\n        Sign In\n      </AuthFormButton>\n      <span style={{ color: 'red' }}>\n        {error === 400 && 'Incorrect username or password.'}\n      </span>\n    </AuthFormWrapper>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const LoginPageAuthForm = styled.div`\n  max-width: 360px;\n  margin: 0 auto;\n`;\n\nexport const LoginPageAuthHeader = styled.h2`\n  text-align: center;\n`;\n","import { LoginForm } from 'components/AuthForms/LoginForm';\nimport { Container } from 'components/Container';\nimport { LoginPageAuthForm, LoginPageAuthHeader } from './loginPage.styled';\n\nconst Login = () => {\n  return (\n    <Container>\n      <LoginPageAuthForm>\n        <LoginPageAuthHeader>Login</LoginPageAuthHeader>\n        <LoginForm />\n      </LoginPageAuthForm>\n    </Container>\n  );\n};\n\nexport default Login;\n"],"names":["transition","AuthFormWrapper","styled","AuthFormLabel","AuthFormDiv","AuthFormIconWrapper","AuthFormInput","AuthFormButton","LoginForm","dispatch","useDispatch","useState","email","setEmail","password","setPassword","error","useSelector","state","auth","useEffect","authSlice","handleChange","event","value","target","name","handleSubmit","preventDefault","login","unwrap","onSubmit","autoComplete","htmlFor","id","type","placeholder","required","onChange","size","className","disabled","style","color","LoginPageAuthForm","LoginPageAuthHeader","Container"],"sourceRoot":""}